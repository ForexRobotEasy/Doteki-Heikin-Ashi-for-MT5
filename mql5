
//+------------------------------------------------------------------+
//|                                                   Doteki Heikin Ashi for MT5 |
//|                                           https://www.forexroboteasy.com |
//|                                                         Forex Robot Easy Team |
//+------------------------------------------------------------------+
#property copyright 'Forex Robot Easy Team'
#property link      'https://www.forexroboteasy.com'

// Input parameters
input int EMA_Period = 20; // Default EMA period

// Global variables
int prevTrend = 0; // Previous trend direction

//+------------------------------------------------------------------+
//| Custom indicator initialization function                         |
//+------------------------------------------------------------------+
int OnInit()
{
   // Set EMA period
   if(EMA_Period <= 0)
   {
      Print('Invalid EMA period. Please set a positive integer value.');
      return INIT_FAILED;
   }
   
   // Add EMA to chart
   IndicatorSetInteger(INDICATOR_DIGITS, _Digits);
   SetIndexBuffer(0, EMA_Period);
   SetIndexStyle(0, DRAW_LINE);
   SetIndexLabel(0, 'EMA(' + string(EMA_Period) + ')');
   
   return INIT_SUCCEEDED;
}

//+------------------------------------------------------------------+
//| Custom indicator deinitialization function                       |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
{
   // Remove EMA from chart
   ObjectsDeleteAll(0, OBJ_TREND_LINE);
}

//+------------------------------------------------------------------+
//| Custom indicator iteration function                              |
//+------------------------------------------------------------------+
int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
{
   ArraySetAsSeries(open, true);
   ArraySetAsSeries(high, true);
   ArraySetAsSeries(low, true);
   ArraySetAsSeries(close, true);

   // Calculate EMA
   ArrayInitialize(EMA_Period, 0);
   for(int i = EMA_Period; i < rates_total; i++)
   {
      EMA_Period[i] = iMA(NULL, 0, EMA_Period, 0, MODE_EMA, PRICE_CLOSE, i);
   }
   
   // Check for trend direction change
   int currentTrend = 0;
   if(close[0] > EMA_Period[0])
      currentTrend = 1;
   else if(close[0] < EMA_Period[0])
      currentTrend = -1;
   
   // Send notification on trend direction change
   if(currentTrend != prevTrend)
   {
      prevTrend = currentTrend;
      if(currentTrend == 1)
         Print('Bullish trend detected.');
      else if(currentTrend == -1)
         Print('Bearish trend detected.');
   }
   
   // Return the calculated rates
   return rates_total;
}
